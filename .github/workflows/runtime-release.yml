name: Runtime Release
on:
  push:
    branches:
      - 'nn/**'

jobs:
  docker-build:
    runs-on: 
      - self-hosted
      - linux
      - x64
      - sre
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Set env
        run: echo "RELEASE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Download rococo-chachacha.json
        run: |
          docker system prune -f 
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ./docker/get-rococo get s3://composable-rococo/rococo-chachacha.json rococo-chachacha.json

      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install toolchain
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
          rustup default stable
          rustup update nightly
          rustup update stable
          rustup target add wasm32-unknown-unknown --toolchain nightly

      - name: Build and Release Composable Binary
        run: |
          /home/runner/.cargo/bin/cargo build --release -p composable
          gsutil cp target/release/composable gs://composable-binaries/releases/client/v0.1.0/ 

      - name: Build and Release Parachain Utils Binary
        run: |
          /home/runner/.cargo/bin/cargo build --release -p parachain-utils
          gsutil cp target/release/parachain-utils gs://composable-binaries/releases/client/v0.1.0/

      - name: Run runtime upgrade on RPC Node
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd composable
            git pull origin main 
            wget https://storage.googleapis.com/composable-binaries/releases/client/v0.1.0/target.zip
           

  


      # - name: Set up Docker Build
      #   run: |
      #     make containerize

      # - name: Docker push
      #   run: |
      #     make push

  # binary-build: 
  #   runs-on: 
  #     - self-hosted
  #     - linux
  #     - x64
  #     - sre  
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: 
  #         fetch-depth: 0

  #     - name: Set env
  #       run: echo "RELEASE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

  #     - name: Download rococo-chachacha.json
  #       run: |
  #         export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
  #         export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         ./docker/get-rococo get s3://composable-rococo/rococo-chachacha.json rococo-chachacha.json
        
  #     - name: Build composable
  #       run: cargo build --release -p composable

  #     - name: Copy Build Artifacts
  #       run: |
  #         export FILENAME='faucet-server'${RELEASE_VERSION}
  #         zip faucet-server${RELEASE_VERSION}  target/release/faucet-server
  #         aws s3 cp $FILENAME s3://advancedblockchain.binaries
  


      