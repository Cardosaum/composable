name: Release Drafter
on:
  push:
    branches:
      - releases
      - test-release

env:
  GITHUB_TOKEN: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}

jobs:
  build-and-publish:
    runs-on: 
        - self-hosted
        - linux
        - x64
        - sre
    strategy: 
      fail-fast: true
      matrix: 
        runtime: [dali, picasso, composable]
    steps:
    - name: Clean up
      continue-on-error: true
      run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE
        docker system prune --force --all --volumes

    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
  
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: ðŸ”¨ Install srtool
      id: client_release
      run: |
        cargo install --git https://github.com/chevdor/srtool-cli
        cargo install --locked --git https://github.com/chevdor/subwasm --tag v0.16.1

    - name: ðŸ”¨ Build and Upload Composable Binary
      run: |
        .maintain/client_release.sh

    - name: Build wasm with srtool
      id: runtime_release
      run: |
        .maintain/runtime_release.sh

    - uses: release-drafter/release-drafter@v5
      id: release_drafter
      env:
        GITHUB_TOKEN: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}

    - name: 
      run: |
        cd .scripts/github && yarn install
        yarn update-release-body --id={{ steps.release_drafter.outputs.id  }} --repo=composableFi/composable --body="${{ env.CHANGES  }}\n\n${{ steps.release_drafter.outputs.body }}"
        cd $GITHUB_WORKSPACE

    - name: Upload Compact ${{ matrix.runtime }} wasm
      id: upload-release-asset 
      if: env.${{ matrix.runtime }}_wasm == 1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release_drafter.outputs.upload_url }} 
        asset_path: ./runtime/${{ matrix.runtime }}/target/srtool/release/wbuild/${{ matrix.runtime }}-runtime/${{ matrix.runtime }}_runtime.compact.wasm
        asset_name: ${{ matrix.runtime }}_runtime.compact.wasm

