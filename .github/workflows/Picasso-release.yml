name: "Picasso Community Release"

on:
  push: 
    tags: 
      - 'picasso-*'
env:
  CHAIN: "picasso"

jobs:
  build-and-publish:
    runs-on: 
        - self-hosted
        - linux
        - x64
        - sre
    strategy:
      matrix:
        chain: ["dali-chachacha", "picasso"]
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
        ref: picasso

    - name: Set env
      run: |
        echo "RELEASE_VERSION=$(git tag --sort=committerdate | grep -E '^picasso-[0-9]' | tail -1 )" >> $GITHUB_ENV
        make version

    - name: Build and Push Artifacts to gcloud
      run: |
        /home/runner/.cargo/bin/cargo build --release --bins
        tar -czvf composable-${{ env.RELEASE_VERSION }}.tar.gz target/release/composable
        tar -czvf parachain-utils-${RELEASE_VERSION}.tar.gz target/release/parachain-utils
        #/home/runner/.cargo/bin/cargo install --git https://github.com/chevdor/srtool-cli
        #/home/runner/.cargo/bin/srtool build --package picasso-runtime --profile release --runtime-dir ./runtime/picasso
    
    - name: Build with srtool
      uses: chevdor/srtool-actions@v0.3.0
      with:
          chain: ${{ matrix.chain }}
          package: picasso-runtime
          runtime_dir: ./runtime/picasso
          
    - name: Srtool build Summary
      run: |
         echo "VERSION=${{ steps.srtool_build.outputs.version }}"
         echo "PROPOSAL=${{ steps.srtool_build.outputs.proposal_hash }}"
         echo "BLAKE2_256=${{ steps.srtool_build.outputs.blake2_256 }}"
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
    
    - name: Upload Checksum
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: checksum.md5.txt
        asset_name: checksum.md5.txt
        tag: ${{ github.ref }}
        overwrite: true

    - name: Build Docker image
      run: make containerize-release 
    - name:  Docker push
      run: make push-release

    - name: Upload Compact wasm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: ./runtime/picasso/target/srtool/release/wbuild/picasso-runtime/picasso_runtime.compact.wasm
        asset_name: picasso_runtime.compact.wasm
        tag: ${{ github.ref }}
        overwrite: true
    
    - name: Upload Compressed wasm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: ./runtime/picasso/target/srtool/release/wbuild/picasso-runtime/picasso_runtime.compact.compressed.wasm
        asset_name: picasso_runtime.compact.compressed.wasm
        tag: ${{ github.ref }}
        overwrite: true
    
    - name: Upload Binary on Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: target/release/composable
        asset_name: composable-${{ env.RELEASE_VERSION }}
        tag: ${{ github.ref }}
        overwrite: true
        body: |
          runtimeversion: $VERSION
          proposal: $PROPOSAL
          black2_256: $BLAKE2_256
          
