
//! Autogenerated weights for `utility`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-01-17, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-01-18, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 128

// Executed Command:
// ./target/release/composable
// benchmark
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=utility
// --extrinsic=*
// --steps=50
// --repeat=20
// --raw
// --output=runtime/dali/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `utility`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> utility::WeightInfo for WeightInfo<T> {
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	fn batch(c: u32, ) -> Weight {
<<<<<<< HEAD
		(9_262_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((8_483_000 as Weight).saturating_mul(c as Weight))
=======
		(31_182_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((9_073_000 as Weight).saturating_mul(c as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	fn as_derivative() -> Weight {
<<<<<<< HEAD
		(8_023_000 as Weight)
=======
		(8_550_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	fn batch_all(c: u32, ) -> Weight {
<<<<<<< HEAD
		(18_054_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((8_954_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	fn dispatch_as() -> Weight {
		(15_985_000 as Weight)
=======
		(15_732_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((9_666_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	fn dispatch_as() -> Weight {
		(17_050_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
	}
}
