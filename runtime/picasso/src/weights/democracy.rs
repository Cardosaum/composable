
//! Autogenerated weights for `democracy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-01-18, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-01-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 128

// Executed Command:
// ./target/release/composable
// benchmark
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=democracy
// --extrinsic=*
// --steps=50
// --repeat=20
// --raw
// --output=runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `democracy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> democracy::WeightInfo for WeightInfo<T> {
	// Storage: Democracy PublicPropCount (r:1 w:1)
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	// Storage: Democracy DepositOf (r:0 w:1)
	fn propose() -> Weight {
<<<<<<< HEAD
		(75_709_000 as Weight)
=======
		(76_230_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy DepositOf (r:1 w:1)
	fn second(s: u32, ) -> Weight {
<<<<<<< HEAD
		(39_037_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((244_000 as Weight).saturating_mul(s as Weight))
=======
		(39_494_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((235_000 as Weight).saturating_mul(s as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_new(r: u32, ) -> Weight {
<<<<<<< HEAD
		(43_061_000 as Weight)
			// Standard Error: 0
			.saturating_add((234_000 as Weight).saturating_mul(r as Weight))
=======
		(43_207_000 as Weight)
			// Standard Error: 0
			.saturating_add((232_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_existing(r: u32, ) -> Weight {
<<<<<<< HEAD
		(43_740_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((207_000 as Weight).saturating_mul(r as Weight))
=======
		(43_457_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((211_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Cancellations (r:1 w:1)
	fn emergency_cancel() -> Weight {
<<<<<<< HEAD
		(26_414_000 as Weight)
=======
		(26_370_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Blacklist (r:0 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn blacklist(p: u32, ) -> Weight {
<<<<<<< HEAD
		(89_177_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((557_000 as Weight).saturating_mul(p as Weight))
=======
		(89_730_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((567_000 as Weight).saturating_mul(p as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	fn external_propose(v: u32, ) -> Weight {
<<<<<<< HEAD
		(13_260_000 as Weight)
			// Standard Error: 0
			.saturating_add((88_000 as Weight).saturating_mul(v as Weight))
=======
		(13_491_000 as Weight)
			// Standard Error: 0
			.saturating_add((77_000 as Weight).saturating_mul(v as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_majority() -> Weight {
<<<<<<< HEAD
		(2_744_000 as Weight)
=======
		(2_913_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_default() -> Weight {
<<<<<<< HEAD
		(2_661_000 as Weight)
=======
		(2_941_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn fast_track() -> Weight {
<<<<<<< HEAD
		(27_397_000 as Weight)
=======
		(27_424_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:1)
	fn veto_external(v: u32, ) -> Weight {
<<<<<<< HEAD
		(28_896_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((106_000 as Weight).saturating_mul(v as Weight))
=======
		(28_681_000 as Weight)
			// Standard Error: 0
			.saturating_add((109_000 as Weight).saturating_mul(v as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn cancel_proposal(p: u32, ) -> Weight {
<<<<<<< HEAD
		(66_398_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((491_000 as Weight).saturating_mul(p as Weight))
=======
		(66_475_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((513_000 as Weight).saturating_mul(p as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn cancel_referendum() -> Weight {
<<<<<<< HEAD
		(17_000_000 as Weight)
=======
		(17_019_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_queued(r: u32, ) -> Weight {
<<<<<<< HEAD
		(30_669_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((1_334_000 as Weight).saturating_mul(r as Weight))
=======
		(30_511_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((1_399_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base(r: u32, ) -> Weight {
<<<<<<< HEAD
		(7_103_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((5_217_000 as Weight).saturating_mul(r as Weight))
=======
		(5_850_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((5_240_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy LastTabledWasExternal (r:1 w:0)
	// Storage: Democracy NextExternal (r:1 w:0)
	// Storage: Democracy PublicProps (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base_with_launch_period(r: u32, ) -> Weight {
<<<<<<< HEAD
		(14_447_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((5_234_000 as Weight).saturating_mul(r as Weight))
=======
		(13_175_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((5_263_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:3 w:3)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn delegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(58_201_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((6_908_000 as Weight).saturating_mul(r as Weight))
=======
		(58_838_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((6_950_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy VotingOf (r:2 w:2)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	fn undelegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(27_429_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((6_936_000 as Weight).saturating_mul(r as Weight))
=======
		(27_174_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((7_016_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy PublicProps (r:0 w:1)
	fn clear_public_proposals() -> Weight {
<<<<<<< HEAD
		(3_174_000 as Weight)
=======
		(3_298_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(41_760_000 as Weight)
=======
		(42_172_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_imminent_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(27_730_000 as Weight)
=======
		(28_049_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	// Storage: System Account (r:1 w:0)
	fn reap_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(39_896_000 as Weight)
=======
		(40_301_000 as Weight)
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_remove(r: u32, ) -> Weight {
<<<<<<< HEAD
		(37_205_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((116_000 as Weight).saturating_mul(r as Weight))
=======
		(37_625_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((104_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_set(r: u32, ) -> Weight {
<<<<<<< HEAD
		(35_341_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((194_000 as Weight).saturating_mul(r as Weight))
=======
		(35_585_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((190_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(20_107_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((180_000 as Weight).saturating_mul(r as Weight))
=======
		(20_515_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((177_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_other_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(19_971_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((189_000 as Weight).saturating_mul(r as Weight))
=======
		(20_196_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((192_000 as Weight).saturating_mul(r as Weight))
>>>>>>> a26f8d09c2eebfa5abe6e802a45f40018fc17beb
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
